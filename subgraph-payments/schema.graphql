extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.5", 
        import: ["@key", "@shareable"])

# Query type for fetching payment information
type Query {
  payment: Int @shareable
}

# Mutation type for wallet operations
type Mutation {
  addFundsToWallet(amount: Float!): AddFundsToWalletResponse! @shareable
  cancelBooking(id: ID!): CancelBookingResponse! @shareable
}

# User interface with common user fields
interface User {
  id: ID!
  name: String!
}

# Interface for mutation responses
interface MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

# Response type for addFundsToWallet mutation
type AddFundsToWalletResponse implements MutationResponse {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
  amount: Float @shareable
}

type Booking @key(fields: "id") {
  id: ID!
  listing: Listing! @shareable
  guest: Guest! @shareable
}

type Listing @key(fields: "id") {
  id: ID!
  "The list of bookings for a listing"
  bookings: [Booking]! @shareable
}

# Response type for cancelBooking mutation
type CancelBookingResponse implements MutationResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int! @shareable
  "Indicates whether the mutation was successful"
  success: Boolean! @shareable
  "Human-readable message for the UI"
  message: String! @shareable
  "The newly-created booking"
  booking: Booking @shareable
  "The amount of money refunded to the guest"
  refundAmount: Float! @shareable
}

# Guest type implementing User interface with federated key
type Guest implements User @key(fields: "id") {
  id: ID!
  name: String! @shareable
  funds: Float! @shareable
}

# Host type implementing User interface with federated key
type Host implements User @key(fields: "id") {
  id: ID!
  name: String! @shareable
  earnings: Float! @shareable
}
