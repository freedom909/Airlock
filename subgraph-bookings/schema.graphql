extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.8", 
  import: ["@key", "@shareable", "@override", "@requires", "@provides"])

enum CacheControlScope {  
  PUBLIC  
  PRIVATE  
  INHERIT  
}
scalar DateTime
directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE  

type Query {
  ### Bookings
  bookingsForHost(listingId: ID!, status: BookingStatus): [Booking!]! @shareable
  currentGuestBooking: Booking! @shareable
  upcomingGuestBookings: [Booking!]! @shareable
  pastGuestBookings: [Booking!]! @shareable
  guestBookings: [Booking!]! @shareable
  booking(id: ID!): Booking! @shareable
  bookingsForGuest(userId: ID!): [Booking!] @shareable
}

type CancelBookingResponse implements MutationResponse {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
  booking: Booking! @shareable
}

type Mutation {
  createBooking(input: CreateBookingInput!): CreateBookingResponse! @shareable
  cancelBooking(id: ID!): CancelBookingResponse @shareable
  confirmBooking(id: ID!): Booking! @shareable
}

type CreateBookingResponse {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
  booking: Booking! @shareable
}

enum BookingStatus {
  CURRENT
  COMPLETED
  UPCOMING
  PAST
  CANCELLED
  CONFIRMED
}

type Booking @key(fields: "id") {
  id: ID!
  listing: Listing! @shareable @cacheControl(maxAge: 3600) 
  guest: Guest! @shareable @cacheControl(maxAge: 3600) 
  review: Review @shareable
  checkInDate: DateTime! @shareable @cacheControl(maxAge: 3600) 
  checkOutDate: DateTime! @shareable @cacheControl(maxAge: 3600) 
  totalPrice: Float! @shareable @cacheControl(maxAge: 3600) 
  criteriaTime: Int! @shareable @cacheControl(maxAge: 3600) 
  status: BookingStatus! @shareable @cacheControl(maxAge: 60) 
  cancelledAt: DateTime @shareable @cacheControl(maxAge: 60)
  confirmedAt: DateTime @shareable @cacheControl(maxAge: 60)
}

type ReservedDate @shareable {
  checkInDate: DateTime!
  checkOutDate: DateTime!
}

type Listing @key(fields: "id") {
  id: ID!
  bookings: [Booking!]! @shareable
}

type Guest @key(fields: "id") {
  id: ID!
  bookings: [Booking!]! @shareable
  picture: String! @shareable
}

type Review @key(fields: "id") {
  id: ID!
}

interface MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

input CreateBookingInput {
  listingId: ID!
  checkInDate: DateTime!
  checkOutDate: DateTime!
  guestId: ID!
}
