extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.7",
  import: ["@key","@shareable"])


  extend type User @key(fields: "id") {
    id: ID! 
    email: String!
    name: String!
    nickname: String!
    role: String!
    picture: String
    token: String
  }

  input signUpInput {
    email: String!
    password: String!
    name: String!
    nickname: String!
    role: String = "GUEST"
    picture: String
  }

type SignInResponse implements MutationResponse {
  token: String!
  userId: String!
  role: Role!
  message: String!
  code: Int!
  success: Boolean! 
}

enum Role {
  ADMIN
  HOST
  GUEST
}
input SignInInput {
    email: String!
    password: String!
  }

interface MutationResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
}

  type Mutation {
    signUp(input: signUpInput!): User!
    signIn(input: SignInInput!): SignInResponse!
  }

  type Query {
    getUser(id: ID!): User
  }
